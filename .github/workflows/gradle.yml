name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_BUCKET_NAME: commonplantbucket

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Copy yml
        env:
          OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
          OCCUPY_SECRET_DIR: src/main/resources
          OCCUPY_SECRET_DIR_FILE_NAME: application.yml
        run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME

      - name: Copy FCM Secret
        env:
          FCM_SECRET: ${{ secrets.FCM_SECRET }}
          FCM_SECRET_DIR: src/main/resources/firebase
          FCM_DIR_FILE_NAME: serviceAccountKey.json
        run: echo $FCM_SECRET | base64 --decode > $FCM_SECRET_DIR/$FCM_DIR_FILE_NAME
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy


      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      # 파일 압축
      - name: Make zip file
        run: zip -r -qq -j ./common.zip ./deploy
        shell: bash
      
      # AWS 인증
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # S3에 빌드된 파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./common.zip s3://$S3_BUCKET_NAME/

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
	run: aws deploy create-deployment --application-name common --deployment-group-name common-group --file-exists-behavior OVERWRITE --s3-location bucket=$S3_BUCKET_NAME, bundleType=zip, key=common.zip --region ap-northeast-2

